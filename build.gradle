plugins {
    id "fabric-loom"
    id "maven-publish"
    id "org.jetbrains.kotlin.jvm"
    id "org.jmailen.kotlinter" version "2.3.2"
    id "org.jetbrains.kotlin.plugin.serialization" version "1.3.70"
    id 'com.matthewprenger.cursegradle' version "1.4.0"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}


repositories {
    jcenter()
    maven { setUrl("https://dl.bintray.com/hotkeytlt/maven") }
    maven { url = "http://maven.fabricmc.net/" }
    maven {
        name = "CottonMC"
        url = "http://server.bbkr.space:8081/artifactory/libs-release"
    }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

    // If you add something here that is also on curseforge, add it to the curseforge
    // block below, as a requiredDependency or embeddedLibrary
    modImplementation "com.lettuce.fudge:fabric-drawer:3.2.0-1.15-pre1"
    include "com.lettuce.fudge:fabric-drawer:3.2.0-1.15-pre1"

    modImplementation "io.github.cottonmc:LibGui:1.8.0+1.15.2"
    include "io.github.cottonmc:LibGui:1.8.0+1.15.2"

    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"

    implementation 'com.github.h0tk3y.betterParse:better-parse-jvm:0.4.0-alpha-3'
    include 'com.github.h0tk3y.betterParse:better-parse-jvm:0.4.0-alpha-3'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5'
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

curseforge {
    // Stored in ~/.gradle/gradle.properties
    if (project.hasProperty('curseApiKey'))
        apiKey = project.curseApiKey
    else if (System.getenv("CURSE_API_KEY") != null)
        apiKey = System.getenv("CURSE_API_KEY")
    else
        println 'No CurseForge API key found, \'curseforge\' tasks will not work'

    project {
        id = project.curseforge_id
        releaseType = 'release'
        addGameVersion project.minecraft_version
        addGameVersion 'Fabric'
        setChangelog 'For the changelog, please see https://github.com/Forkk/Greenstone/releases'
        mainArtifact(remapJar) {
            displayName = "v$project.version"
            relations {
                requiredDependency 'fabric-api'
                requiredDependency 'fabric-language-kotlin'

                embeddedLibrary 'fabric-drawer'
                embeddedLibrary 'libgui'
            }
        }
        addArtifact sourcesJar
    }
    options {
        forgeGradleIntegration = false
    }
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"
